#!/usr/bin/env bash

# fail fast
set -e

# Bail with a help message if the arguments look wrong
if [ $# != 4 -o "${1}" == "help" ]; then
  echo "Usage: ${0} <base url> <node version number> <checksum filename> <install dir>"
  echo ""
  echo "Verifies and installs the specified version of Node.js to the"
  echo "specified directory where the version number is expected to be"
  echo "of the form 'v#.#.#'."
  echo ""
  echo "The Node.js binary with the specified version and the checksum"
  echo "file with the specified name will be downloaded from the specified"
  echo "base url."
  echo ""
  echo "Note:  The installation directory will be deleted completely"
  echo "       before the installation takes place."
  echo ""
  echo "An exit code of 0 indicates success and a non-zero exit code"
  echo "indicates failure.  A failure will occur if the Node.js binary"
  echo "file could not be downloaded, the checksum file could not be"
  echo "downloaded, the installation directory could not be created "
  echo "(if it doesn't already exist), or the verification of the "
  echo "Node.js binary fails."
  exit 1
fi

# The URL of the location from which the specified Node.js file 
# and checksum file can be downloaded
base_url="${1}"

# The node version to install expected to be of the form 'v#.#.#'
node_version="${2}"

# The name of the checksum file found in ${base_url} that is used to
# verify the Node.js binary
checksum_file="${3}"

# The location where the Node will be installed
install_dir="${4}"

# The name of the Node.js binary to install
node_filename="node-${node_version}-linux-x64.tar.gz"

# The temporary location where the downloaded files are stored while being
# verified.  The script will ensure that this directory is removed before 
# the script exits.
script_name=`basename ${0}`
tmp_dir=`mktemp -d /tmp/${script_name}.XXXXXX` || exit 1

function cleanUp {
  rm -Rf "${tmp_dir}"
}

# Make sure we are in the correct place in the fs and it is pristine
cleanUp
mkdir -p "${tmp_dir}"
cd "${tmp_dir}"

# wget is used over curl so that a non-zero exit code is produced if a 
# 404 error is encountered
wget ${base_url}/${node_filename} || (cleanUp; exit 1)
wget ${base_url}/${checksum_file} || (cleanUp; exit 1)

# The verify node script has a non-zero exit code on failure
/opt/nodejs/verify_node ${node_filename} ${checksum_file} \
  || (cleanUp; exit 1)

# If the verification is successful, proceed to install Node
# First, remove the installation directory to prepare for a fresh install
# Note: The -f option is used with rm so that rm will still succeed if
#       the installation directory doesn't exist.
(rm -Rf "${install_dir}") || (cleanUp; exit 1)
(mkdir -p "${install_dir}") || (cleanUp; exit 1)

(tar xvzf "${tmp_dir}/${node_filename}" -C "${install_dir}" --strip-components=1) \
  || (cleanUp; exit 1)

cleanUp
